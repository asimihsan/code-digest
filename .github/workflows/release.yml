on:
  push:
    branches: ["main"]
    tags:
      - '*'

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache Crates
        uses: actions/cache@v3
        with:
          path: |
            ./target
            ~/.cargo
          key: debug-${{ runner.os }}-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            debug-${{ runner.os }}-${{ hashFiles('rust-toolchain.toml') }}-
            debug-${{ runner.os }}-

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --release -- --deny warnings

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: code-digest-${{ matrix.os }}
          path: target/release/code-digest

  upload_release_assets:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Check if release exists
        id: check_release
        run: |
            set -e
            release_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref }} | jq -r '.id')
            if [ "$release_id" != "null" ]; then
                echo "Release already exists"
                exit 1
            fi
            echo "::set-output name=release_id::$release_id"

      - name: Create release if not exists
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
        if: steps.check_release.outputs.release_id == 'null'

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: code-digest-${{ matrix.os }}
          path: target/release
